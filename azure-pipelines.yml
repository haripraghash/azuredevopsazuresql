# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'

steps:
- task: VSBuild@1
  displayName: Build Solution
  inputs:
    solution: '**\*.sln' 
    #vsVersion: 'latest' # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 11.0
    msbuildArgs: '/t:Clean,Build /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)"'
    #platform: # Optional
    configuration: $(BuildConfiguration)
    #clean: false # Optional
    #maximumCpuCount: false # Optional
    #restoreNugetPackages: false # Optional
    #msbuildArchitecture: 'x86' # Optional. Options: x86, x64
    #logProjectEvents: true # Optional
    #createLogFile: false # Optional
    #logFileVerbosity: 'normal' # Optional. Options: quiet, minimal, normal, detailed, diagnostic
- task: CopyFiles@2
  displayName: Copy dacpac to artifacts
  inputs:
    SourceFolder: azuredevopsazuresql
    Contents: |
     bin\$(BuildConfiguration)\azuredevopsazuresql.dacpac
    TargetFolder: '$(build.artifactstagingdirectory)\datamodel'
    flattenFolders: true

- task: PublishBuildArtifacts@1
  displayName: Publish dacpac
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/datamodel'
    ArtifactName: datamodel

- task: CopyFiles@2
  displayName: Copy provisioning scripts
  inputs:
    SourceFolder: azuredevopsazuresql.provisioning
    Contents: 
     '**\*.json''**\*.ps1'
    TargetFolder: '$(build.artifactstagingdirectory)/iac'
    

- task: PublishBuildArtifacts@1
  displayName: Publish infrastructure artifacts
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/iac'
    ArtifactName: iac

